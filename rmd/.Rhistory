# LOAD DATASETS PACKAGES ###################################
library(datasets)  # Load built-in datasets
# SUMMARIZE DATA
data("iris")
force(iris)
View(iris)
head(iris)         # Show the first six lines of iris data
summary(iris)      # Summary statistics for iris data
plot(iris)         # Scatterplot matrix for iris data
View(iris)
View(iris)
ls(iris)
?ls
3 <- x
x <- 3
nsdfsdfds <- 877
x
nsdfsdfds
3 -> jjj
y <- 5
x + y
yplusx <- x +y
x <- 5
yplusx <- x +y
glengths <- c(4.6, 3000, 50000)
glengths
?c()
species <- c("ecoli", "human", "corn")
combined <- c(species, glengths)
combined
expression <- c("low", "high", "medium", "high", "low", "medium", "high")
expression
?factor()
factor(expression)
expression <- factor(expression)
expression
?factor()
var1 <- c(1 , 2 , 3 , 4)
var2 <- c(a , b , c , d)
var2 <- c("a" , "b" , "c" , "d")
df <- data.frame(species, glengths)
df <- data.frame(var1, var2)
View(df)
list1 <- list(species, df, number)
number <- 9
list1 <- list(species, df, number)
View(list1)
getwd()
?setwd()
round(2.34)
round(2.34)
?round()
round(2.34 , round=0)
round(2.34 , round = 0)
round(2.34 , round = 1)
round(2.34 , round = 2)
round(3.14159, digits=2)
?mean()
mean(glengths)
square_it <- function(x) {
square <- x * x
return(square)
}
square_it(4)
# Then load the package by using either of the following:
require(pacman)  # Gives a confirmation message.
library(pacman)  # No message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
?plot()
?hist()
library(commonmark)
detach("package:commonmark", unload = TRUE)
install.packages("data.table")
install.packages("data.table")
sdlfhasod
?help
??histogram
RSiteSearch()
RSiteSearch("Regression")
?diff()
?round()
iris %>%
subset(Sepal.Length > 5) %>%
aggregate(. ~ Species, ., mean)
library("tidyverse")
iris %>%
subset(Sepal.Length > 5) %>%
aggregate(. ~ Species, ., mean)
iris %>%
subset(Sepal.Length > 5) %>%
aggregate(. ~ Species, ., mean)
library(datasets)
data(mtcars)
# Here, we set up a column name in a variable to illustrate use
# of various forms of the extract operator with a column name stored in
# another R object
theCol <- "cyl"
# approach 1: use [[ form of extract operator to extract a column
#             from the data frame as a vector
#             this works because a data frame is also a list
mtcars[[theCol]]
# approach 2: use variable name in column dimension of data frame
mtcars[,theCol]
# approach 3: use the $ form of extract operator. Note that since this
#             form accesses named elements from the list, you can't use
#             variable substitution (e.g. theCol) with this version of
#             extract
mtcars$cyl
# this version fails because the `$` version of extract does not
# work with variable substitution (i.e. a computed index)
mtcars$theCol
mean(mtcars$cyl)
?seq()
library("dataset")
library("datasets")
# here is solve the exercise
3+1
# Create data for the graph.
x <- c(21, 62, 10, 53)
labels <- c("London", "New York", "Singapore", "Mumbai")
# Give the chart file a name.
png(file = "city.png")
# Plot the chart.
pie(x,labels)
# Save the file.
dev.off()
getwd()
?pie()
exit
q()
?hist()
hist(22)
# LOAD PACKAGES
# There are a lot of packages pre-installed but not loaded, see here:
installed.packages()
# LOAD PACKAGES
# There are a lot of packages pre-installed but not loaded, see here:
installed.packages()
# A package can be installed using install.packages("<package name>").
install.packages("dplyr")
# I recommend "pacman" for managing add-on packages. It will
# install packages, if needed, and then load the packages.
install.packages("pacman")
install.packages("pacman")
?hist
??histogram
?round
?function
?length
?if
help(if)
?c()
?list
list
list()
mpg
library(mpg)
data("mtcars")
list
list()
list(mtcars)
?paste
library(shiny)
install.packages("shiny")
exists("shiny")
library("shiny")
exists("shiny")
exists("shiny")
library("shiny")
exists("shiny")
detach("package:shiny", unload = TRUE)
library(shiny)
exists("shiny")
exists(shiny)
View(mtcars)
list(mtcars)
?View
?mtcars
knitr::opts_chunk$set(echo = TRUE)
hist(mtcars$hp)
rm(wt)
rm(mtcars$wt)
?rm
remove(mtcars$wt)
rm(mtcars, list=mpg)
rm(mtcars, list="mpg")
data(mtcars)
data4 <- within(mtcars, rm(wt))
mtcars$rm(wt)
mtcars:rm(wt)
(\sqrt(8)*3/4+7^(-2))*9
(/sqrt(8)*3/4+7^(-2))*9
(sqrt(8)*3/4+7^(-2))*9
result <- (sqrt(8)*3/4+7^(-2))*9
state <- c("BY", "BW", "NRW")
cases <- c(17954, 17954, 12025)
d_frame <- data.frame(state, deaths)
result <- (sqrt(8)*3/4+7^(-2))*9
state <- c("BY", "BW", "NRW")
cases <- c(17954, 17954, 12025)
d_frame <- data.frame(state, deaths)
summary(state)
getwd()
summary(state)
(sqrt(8)*3/4+7^(-2))*9
summary(state$deaths)
summary(state$deaths)
summary(state)
sum(state)
result <- (sqrt(8)*3/4+7^(-2))*9
state <- c("BY", "BW", "NRW")
cases <- c(17954, 17954, 12025)
d_frame <- data.frame(state, deaths)
rm(list = ls())
result <- (sqrt(8)*3/4+7^(-2))*9
state <- c("BY", "BW", "NRW")
deaths <- c(17954, 17954, 12025)
d_frame <- data.frame(state, deaths)
sum(state$deaths)
summary(state$deaths)
summary(d_frame$deaths)
sum(d_frame$deaths)
summary(d_frame$deaths)
desc::state
desc::d_frame
mean(covid$deaths)
rm(list = ls())
result <- (sqrt(8)*3/4+7^(-2))*9
state <- c("BY", "BW", "NRW")
deaths <- c(17954, 17954, 12025)
covid <- data.frame(state, deaths)
mean(covid$deaths)
mean-deaths <- mean(covid$deaths)
summary(covid$deaths)
mean-deaths <- mean(covid$deaths)
rm(list = ls())
result <- (sqrt(8)*3/4+7^(-2))*9
state <- c("BY", "BW", "NRW")
deaths <- c(17954, 17954, 12025)
covid <- data.frame(state, deaths)
mean-deaths <- mean(covid$deaths)
?mean
mean(covid$deaths)
mean-deaths <- mean(covid$deaths)
mean_deaths <- mean(covid$deaths)
mean_deaths <- mean(covid$deaths)
meandeaths <- mean(covid$deaths)
summary(covid$deaths)
?shiny
kuzutukuf
1+2
1+
7
sqrt(9)
exp(878)
install.packages("swirl")
library("swirl")
ls()
rm(list=ls())
swirl()
swirl::install_course("A_(very)_short_introduction_to_R")
install.packages("swirl")
library("swirl")
swirl()
5+7
quit()
round(8.45,digits = 3)
round(8.45111111,digits = 3)
round(8.45111111,digits = 1)
round(8.45111111,1)
round(digits = 1, 8.12345)
round(1, 8.12345)
?mean
?round
data()
data("mtcars")
force(mtcars)
View(mtcars)
head(mtcars)
head(mtcars)
?mtcars
summary(mtcars$mpg)
swirlify()
library("swirl")
library("swirlify")
swirlify()
?swirlify
ls()
View(covid)
ls(covid)
head()
head(covid)
summary(covid)
?swirl
?ggplot
library("ggplot2")
?ggplot
?ggplot
??ggplot
data()
data("mtcars")
head(mtcars, 6)
head(mtcars, 6)
?mtcars
library("swirl")
library("swirlify")
?swirl
?swirlify
set_lesson()
swirlify(aaa,bbb)
swirlify("aaa","bbb")
swirlify()
swirlify()
install.packages("knitr")
install.packages("knitr")
install.packages("purl")
?output
library(swirl) # load the swirl package
install.packages("swirl")
library("swirl")
ls()
rm(list=ls())
swirl()
library("swirlify")
?swirlify
uninstall_all_courses()
install_course_github("hubchev", "swirl-it")
swirl()
library(swirl)
swirl()
10            +    1
10+
1
15+
getwd(
)
12+2
this_is_my_result <- 12 + 2
this_is_my_result
this_is_my_result - 3
this_is_my_result <- 12 + 6
23 - 4 -> res2
23 - 2 = res3
res3=23 - 2
objname_222 <- 87
8^(1/2)
sqrt(8)
sqrt(9)
9^(1/2)
sqrt(8)*(3/4+7^(-2))*9/2
result_exe <- sqrt(8)*(3/4+7^(-2))*9/2
round(result_exe)
?round
round(result_exe, digits=0)
round(result_exe)
round(result_exe, digits=6)
round(result_exe, digits=2)
rounded_result <- round(result_exe, digits=6)
rounded_result <- round(result_exe, digits=2)
?sqrt
abs(3)
abs(-3)
1/3*8^3
1000/1,1
1000/1.1
?ssubset
?subset
?pie
?pdf
getwd()
H <- c(7,12,28,3,41)
# Give the chart file a name
png(file = "barchart.png")
# Plot the bar chart
barplot(H)
# Save the file
dev.off()
# Give the chart file a name
pdf(file = "barchart2.pdf")
# Plot the bar chart
barplot(H)
# Save the file
dev.off()
setwd("/home/sthu/Dropbox/hsf/github/courses/rmd/")
library(rmarkdown)
rmarkdown::render("22-04_dsb-project-description.Rmd", "all")
library("knitr")
knit_hooks$set(purl = hook_purl)
rmarkdown::render("22-04_dsb-project-description.Rmd", "all")
